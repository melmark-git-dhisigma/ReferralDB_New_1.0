@model ReferalDB.Models.AcademicReviewModel
<style type="text/css">
    .lblSpan {
        font-style: italic;
        font-weight: bold;
    }
</style>
<script type="text/javascript">

    function ValidateDate(evt, id) {

        var count = $('#CountVal').val();
        for (var i = 0; i < count; i++) {
            var fromDate = $('#CallLog_' + i + '__CallDateShow').val();
            var toDate = $('#CallLog_' + i + '__AppntDateShow').val();

            var startDate = new Date(fromDate);
            var endDate = new Date(toDate);
            if (fromDate != '' && toDate != '' && startDate > endDate) {
                $('#tdMsg').html("<div class='warning_box'>Appointment Date/Time must be greater than or equal to  Date and Time of Call.</div>");
                return false;
            }
        }
        if (id == "submitFunding") {
            checkall(evt);
        }
        return true;
    }


    var date = new Date();
    date.setDate(date.getDate());

    @if (ViewBag.Flag == 0)
    {
        string load = "$(document).ready(function () {"
             + "\n$('.datepicker').datepicker("
      + "{"
         + " changeMonth: true,"
         + " changeYear: true,"
         + " showAnim: 'fadeIn',"
         + " yearRange: 'c-100:c+100',"
         + " minDate: date,"

         + " fixFocusIE: false,"

      + "});\n"




            + "var options = {" +
                 "success: showResponse  \n "
             + "};"
            + " $('#applicationForm').ajaxForm(options);"
        + " });";
       @MvcHtmlString.Create(load)
    }

    function showResponse(responseText, statusText, xhr, $form) {



        var msg = responseText.split('*');
        if (msg[0] == "success") {
            SubmitPage(msg[1]);
        }
        else {
            // $('#LoadQueue').html(responseText);
            var htmlObj = $(responseText);
            $('#LoadQueue').load('../PreAdmission/FundingVerification?msg=' + encodeURI($(htmlObj).find('#NotiMsg').html()));

        }
        $('#LoadChecklist').load('../Details/CheckListData'); // To load Assigned Checklist
    }

    $(document).ready(function () {
        $.get("../Dashboard/selectReferalStatus", function (data) {

            if (data == "Client") {
                $('#overlay').height($('#MidContent').height());
                $("#overlay").show();
            }
            else {
                $("#overlay").hide();
            }
        });
        $("#dialog").dialog({
            autoOpen: false,
            modal: true
        });

        ActivateMenuSelection();
        var count = $('#CountVal').val();
        for (var i = 0; i < count; i++) {
            $('#commonCallLog_' + i + '__CallTimeShow').timeEntry();
            $('#commonCallLog_' + i + '__AppntTimeShow').timeEntry();
        }
        GetNameFieldValidate();

        if ($('#commonACCREV_iSSubmitted').val() == 'True') {
            $("#submitFunding").click(function (e) {

                $("#dialog").dialog("open");
                $("#dialog").dialog({
                    buttons: {
                        "Confirm": function () {
                            $('#submitFunding').attr('type', 'submit');
                            $('#submitFunding').trigger("click");;
                            //$("#submitClinical").off('click');
                            //$('#frnClinical').submit();
                            $(this).dialog("close");
                        },
                        "Cancel": function () {

                            $(this).dialog("close");
                            return false;
                        }
                    }
                });

            });
        }
        else {
            $('#submitFunding').attr('type', 'submit');

        }


    });


    var DocheckSubmit = false;
    var chekfailed = false;
    var PageSubmit = false;
    var message1 = "";
    var message2 = "";
    var msg = "";
    //
    function checkall(evt) {
        chekfailed = false;
        PageSubmit = false;
        msg = "";
        $("#dialog").text(msg);
        var checks = $("input:checkbox:not(:checked)");
        if (checks.length > 0) {
            chekfailed = true;
            msg = "Check Lists are not completed. Do you want to continue?";
            if (!DocheckSubmit) {
                evt.preventDefault();
            }

        }
        if ($('#commonACCREV_iSSubmitted').val() == 'True') {
            PageSubmit = true;
            msg = "This form is already submitted. Do you want to continue?";
        }

        if (chekfailed && PageSubmit) {
            msg = "This form is already submitted and Check Lists are not completed. Do you want to continue?";
        }
        if (chekfailed || PageSubmit) {
            $("#dialog").text(msg);
            $("#dialog").dialog("open");
            $("#dialog").dialog({
                buttons: {
                    "Confirm": function () {
                        DocheckSubmit = true;
                        $('#submitFunding').attr('type', 'submit');
                        $('#submitFunding').trigger("click");;
                        //$("#submitClinical").off('click');
                        //$('#frnClinical').submit();
                        $(this).dialog("close");
                    },
                    "Cancel": function () {

                        $(this).dialog("close");
                        return false;
                    }
                }
            });


        }
        else {
            $('#submitFunding').attr('type', 'submit');

        }
    }

    //$(".datepicker").datepicker(
    //{
    //    changeMonth: true,
    //    changeYear: true,
    //    showAnim: "fadeIn",
    //    yearRange: 'c-30:c+30',
    //    minDate: date,
    //    /* fix buggy IE focus functionality */
    //    fixFocusIE: false,

    //});

    function datepickerval(count) {
        // alert($('#commonCallLog__' + count + '__CallTimeShow').length);

        $('#commonCallLog_' + count + '__CallDateShow').datepicker(
        {
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
            yearRange: 'c-100:c+100',
            minDate: date,
            /* fix buggy IE focus functionality */
            fixFocusIE: false,
        });

        $('#commonCallLog_' + count + '__AppntDateShow').datepicker(
       {
           changeMonth: true,
           changeYear: true,
           showAnim: "fadeIn",
           yearRange: 'c-100:c+100',
           minDate: date,
           /* fix buggy IE focus functionality */
           fixFocusIE: false,
       });
        //    commonCallLog[1].CallTimeShow

        $('#commonCallLog_' + count + '__CallTimeShow').timeEntry();
        $('#commonCallLog_' + count + '__AppntTimeShow').timeEntry();



    }

    function AutoCompleteNameOfContact() {
        $('.nameofcontact').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../Dashboard/AutoCompleteContactName",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        //response(data.ReferralName);
                        response($.map(data, function (item) {

                            return { label: item.ContactName, value: item.ContactName, id: item.ContactId };

                        }))
                    },
                })
            },
            select: function (event, ui) {

                var id = ui.item.id;
                // document.getElementById('StudentId2').value = id;

                if (id == 0) {
                    // alert('hello');
                }


                // "Nothing selected, input was " + this.value;
            },
            messages: {
                noResults: '',
                results: function (resultsCount) { }
            }
        });
    }

    function loadUserPage(chkCounti, chkCountj, evt) {
        //evt.preventDefault();
        var ids = $('#ChkAll_' + chkCounti + '__chkList_' + chkCountj + '__AssignMultiId').val();
        if (ids == "") {
            ids = '0';
        }
        $('#viewUserListContent').load('../PreAdmission/userList?userIdz=' + ids + '&ChkListId=' + chkCounti + '&ChkCounti=' + chkCounti + '&ChkCountj=' + chkCountj + '');
        $('#viewUserList').show(250);
    }


    function loadLetterTrayPage(evt) {
        evt.preventDefault();
        var Type = "FV";
        $('#viewLetterTray').show();
        $('#viewLetterTrayContent').load('../PreAdmission/LetterTray?QType=' + Type);
    }

    function closepopup(evt) {
        evt.preventDefault();
        $('#viewUserList').hide();

    }

    function closeLetterpopup(evt) {
        evt.preventDefault();
        $('#viewLetterTray').hide();
    }





    function appndRw_fundingv() {


        var count = $('#CountVal').val();
        var txtStaffName = "";
        var txtContactName = "";
        for (var i = 0; i < count; i++) {

            txtStaffName = "commonCallLog_" + i + "__StaffName";
            txtContactName = "commonCallLog_" + i + "__NameOfContact";
            if ($('#' + txtStaffName) != null && $('#' + txtContactName) != null) {

                if ($('#' + txtStaffName).val() == "" || $('#' + txtContactName).val() == "") {

                    document.getElementById('tdMsg').innerHTML = "<div class='warning_box'>Please enter Contact Log Details</div>";
                    return;
                }

            }
        }


        var count = $('#CountVal').val();
        var coutPls = parseInt(count);
        coutPls = coutPls + 1;

        @{
            clsSession sess = (clsSession)HttpContext.Current.Session["UserSession"];
                                }
        $('#tblCallLog').append("<tr class='trCallLog" + coutPls + "'> <td colspan='3'><div><h3 Id='h_" + coutPls + "'>Contact Log " + coutPls + "</h3></div></td><td style='text-align:right;'><img alt='Remove Contact Log" + coutPls + "' src='/Images/removeCalllog.png' onclick='deleteRow(" + coutPls + ")' style='cursor:pointer'></td></tr><tr  class='trCallLog" + coutPls + "'><td style='width:275px;'><span class='lblSpan'>Staff Name</span><br/><input class='staffName namefield' onpaste='PreventDef(event)'  value='@sess.UserName' id='commonCallLog_" + count + "__StaffName' type='text' value='' style='width:200px;margin-bottom:8%;' name='commonCallLog[" + count + "].StaffName'maxlength='50' /></td><td style='width:275px;'><span class='lblSpan'>Date and Time of Call</span><br/><input id='commonCallLog_" + count + "__CallDateShow' onpaste='PreventDef(event)' type='text' value='' style='width:150px' onkeypress='return false' name='commonCallLog[" + count + "].CallDateShow' /><input id='commonCallLog_" + count + "__CallTimeShow'  type='text' value='' style='width:60px !important;margin:0;' onkeypress='return false'  name='commonCallLog[" + count + "].CallTimeShow' /></td></tr><tr  class='trCallLog" + coutPls + "'><td style='width:275px;'><span class='lblSpan'>Name Of Contact</span><br/><input id='commonCallLog__" + count + "__NameOfContact' type='text' value='' style='width:200px;margin-bottom:8%;' name='commonCallLog[" + count + "].NameOfContact' class='namefield nameofcontact' onpaste='PreventDef(event)' maxlength='50'></td><td style='width:275px;'><span class='lblSpan'>Appointment Date/Time<input id='commonCallLog_" + count + "__AppntDateShow' type='text' value='' style='width:150px' onkeypress='return false' onpaste='PreventDef(event)' name='commonCallLog[" + count + "].AppntDateShow'><input id='commonCallLog_" + count + "__AppntTimeShow'  type='text' value='' style='width:60px !important;margin:0' onkeypress='return false' name='commonCallLog[" + count + "].AppntTimeShow'></td></tr><tr  class='trCallLog" + coutPls + "'><td colspan='4' style='width:275px;'><span class='lblSpan'>Conversation Details</span><br/><textarea id='commonCallLog__" + count + "__Conversation' value='' style='width:100%;height:100px' rows='2' name='commonCallLog[" + count + "].Conversation' maxlength='500' cols='20'></textarea></td></tr>");

        staffNameAutocomplete();
        AutoCompleteNameOfContact();

        $('#commonCallLog_' + count + '__CallTimeShow').timeEntry();
        $('#commonCallLog_' + count + '__AppntTimeShow').timeEntry();
        $('#CountVal').val(coutPls);
        datepickerval(count);
        $('#RemoveCallLog').css("display", "block");
        //$('#commonCallLog_' + count + '__CallTimeShow').timeEntry();
        var ExtraCallLogCnt = $('#ExtraCallLog').val();
        if (ExtraCallLogCnt == "")
            ExtraCallLogCnt = "0";
        var NewExtraCallLogCnt = parseInt(ExtraCallLogCnt) + 1;
        $('#ExtraCallLog').val(NewExtraCallLogCnt);

        GetNameFieldValidate();
    }

    function PreventDef(e) {
        e.preventDefault();
    }
    function deleteRow(cntrl) {
        var confirmDel = confirm("Are you sure want to delete?");
        if (confirmDel == true) {

            var elem = "trCallLog" + cntrl;
            var CallLogCnt = $('#CountVal').val();

            if (CallLogCnt > 1) {
                $('.' + elem).remove();
                var total = cntrl + 1;
                var elemVal = parseInt(CallLogCnt) + 1;
                for (var i = cntrl; i < elemVal; i++) {

                    var k = i - 1;
                    var StaffName = "commonCallLog_" + i + "__StaffName";
                    $("#" + StaffName).attr('name', 'commonCallLog[' + k + '].StaffName');
                    $("#" + StaffName).attr('Id', 'commonCallLog_' + k + '__StaffName');

                    var NameOfContact = "commonCallLog__" + i + "__NameOfContact";
                    $("#" + NameOfContact).attr('name', 'commonCallLog[' + k + '].NameOfContact');
                    $("#" + StaffName).attr('Id', 'commonCallLog_' + k + '__NameOfContact');


                    var Conversation = "commonCallLog__" + i + "__Conversation";
                    $("#" + Conversation).attr('name', 'commonCallLog[' + k + '].Conversation');
                    $("#" + StaffName).attr('Id', 'commonCallLog_' + k + '__Conversation');


                    var CallDateShow = "commonCallLog_" + i + "__CallDateShow";
                    $("#" + CallDateShow).attr('name', 'commonCallLog[' + k + '].CallDateShow');
                    $("#" + StaffName).attr('Id', 'commonCallLog_' + k + '__CallDateShow');

                    var CallTimeShow = "commonCallLog_" + i + "__CallTimeShow";
                    $("#" + CallTimeShow).attr('name', 'commonCallLog[' + k + '].CallTimeShow');
                    $("#" + StaffName).attr('Id', 'commonCallLog_' + k + '__CallTimeShow');

                    var AppntDateShow = "commonCallLog_" + i + "__AppntDateShow";
                    $("#" + AppntDateShow).attr('name', 'commonCallLog[' + k + '].AppntDateShow');
                    $("#" + StaffName).attr('Id', 'commonCallLog_' + k + '__AppntDateShow');

                    var AppntTimeShow = "commonCallLog_" + i + "__AppntTimeShow";
                    $("#" + AppntTimeShow).attr('name', 'commonCallLog[' + k + '].AppntTimeShow');
                    $("#" + StaffName).attr('Id', 'commonCallLog_' + k + '__AppntTimeShow');

                    var h3 = "h_" + i;
                    $("#" + h3).text("Call Log " + k);
                    $("#" + h3).attr('Id', 'h_' + k);



                }
                $('#CountVal').val(CallLogCnt - 1);
            }





            var ExtraCallLogCnt = $('#ExtraCallLog').val();
            var NewExtraCallLogCnt = ExtraCallLogCnt - 1;
            $('#ExtraCallLog').val(NewExtraCallLogCnt);
            if ($('#ExtraCallLog').val() == "0") {
                $('#RemoveCallLog').css("display", "none");
            }
        }
    }
    //*************************** Remove call log ******************************//
    function RemoveRow() {
        var confirmDel = confirm("Are you sure want to delete?");
        if (confirmDel == true) {
            var CallLogCnt = $('#CountVal').val();
            if (CallLogCnt > 1) {
                for (var i = 0; i < 4; i++) {
                    $('#tblCallLog tr:last').remove();
                }
                $('#CountVal').val(CallLogCnt - 1);
            }
            var ExtraCallLogCnt = $('#ExtraCallLog').val();
            var NewExtraCallLogCnt = ExtraCallLogCnt - 1;
            $('#ExtraCallLog').val(NewExtraCallLogCnt);
            if ($('#ExtraCallLog').val() == "0") {
                $('#RemoveCallLog').css("display", "none");
            }
        }
    }

    function downloadFn(id) {
        window.open('../PreAdmission/DownloadFundingDoc?id=' + id + '   ', '_blank');
    }

    function RemoveSingleCallLog(CalllogId) {
        if (confirm('Are you sure you want to delete?')) {
            var CallLog = parseInt(CalllogId);
            if (CallLog != 0) {
                $.get("../PreAdmission/RemoveCallLog?CallLogId=" + CallLog, function (data) {
                    var CallLogCnt = $('#CountVal').val();
                    if (CallLogCnt > 1) {
                        for (var i = 0; i < 4; i++) {
                            $('#tblCallLog tr:last').remove();
                        }
                        $('#CountVal').val(CallLogCnt - 1);
                    }
                    $.get("../PreAdmission/FundingVerification", function (result) {
                        //$('#applicationForm').html(result);
                        $('#LoadQueue').html(result);

                    });
                });
            }
        }
    }



</script>
@*<a href="#" onclick="loadLetterTrayPage(event)" style="float:right">LetterTray</a>*@
@*@using (Ajax.BeginForm("FundingVerification", "PreAdmission", FormMethod.Post, new AjaxOptions { UpdateTargetId = "tdMsg", OnSuccess = "desableallbtns(data);" }))
    {
*@
@using (Html.BeginForm("FundingVerification", "PreAdmission", FormMethod.Post, new { enctype = "multipart/form-data", id = "applicationForm" }))
{


    <div id="overlay" style="width: 60%; position: absolute; background-color: #ccc; opacity: .3; z-index: 999;"></div>
    <div>
        <table style="width: 100%">
            <tr>

                <td>
                    <div id="tdMsg"></div>
                </td>
            </tr>
        </table>
        <div id="NotiMsg">

            @if (ViewBag.Chkmsg != "" || ViewBag.Chkmsg != "undefined")
            {
                @Html.Raw(ViewBag.Chkmsg)
            }
            else
            {
            }

        </div>
        @for (int i = 0; i < Model.ChkAll.Count; i++)
        {
            <table style="width: 100%" class="gridStyle">
                <tr class="HeaderStyle">
                    <td style="width: 30%">
                        <b>@Model.ChkAll[i].ChkHeadName</b>
                        @Html.HiddenFor(m => Model.ChkAll[i].ChkHeadId, Model.ChkAll[i].ChkHeadId)
                        @Html.HiddenFor(m => Model.ChkAll[i].ChkHeadName, Model.ChkAll[i].ChkHeadName)
                    </td>
                    <td style="width: 17%">
                        <b>Assign To</b>
                    </td>
                    <td style="width: 17%">
                        <b>Assign</b>

                    </td>
                    <td style="width: 17%">
                        <b>Due Date</b>
                    </td>
                    <td style="width: 17%">
                        <b>Completed</b>
                    </td>
                </tr>
                @for (int j = 0; j < Model.ChkAll[i].chkList.Count; j++)
                {
                    <tr>
                        <td>
                            @Model.ChkAll[i].chkList[j].CheckListName
                            @Html.HiddenFor(m => Model.ChkAll[i].chkList[j].CheckListName, Model.ChkAll[i].chkList[j].CheckListName)
                            @Html.HiddenFor(m => Model.ChkAll[i].chkList[j].IsPresent, Model.ChkAll[i].chkList[j].IsPresent)
                            @Html.HiddenFor(m => Model.ChkAll[i].chkList[j].AssginId, Model.ChkAll[i].chkList[j].AssginId)
                            @Html.HiddenFor(m => Model.ChkAll[i].chkList[j].checkListId, Model.ChkAll[i].chkList[j].checkListId)
                            @Html.HiddenFor(m => Model.ChkAll[i].chkList[j].ChkHeadId, Model.ChkAll[i].chkList[j].AssginId)
                        </td>
                        <td>
                            <div id="@string.Concat("userName_" + i + "_", j)">@MvcHtmlString.Create(Html.Encode(Model.ChkAll[i].chkList[j].AssignMultiName).Replace(";", "<br />"))</div>
                            @Html.HiddenFor(m => Model.ChkAll[i].chkList[j].AssignMultiId, Model.ChkAll[i].chkList[j].AssignMultiId)
                        </td>
                        <td>
                            <img src="~/Images/AssignUser.png" onclick="loadUserPage(@i,@j,event)" style="cursor:pointer" />
                        </td>
                        <td>
                            <span id="DueDate_@i@j">@Model.ChkAll[i].chkList[j].DueDateToShow</span>
                            @Html.HiddenFor(m => Model.ChkAll[i].chkList[j].DueDateToShow, Model.ChkAll[i].chkList[j].DueDateToShow)
                        </td>
                        <td>
                            @Html.CheckBox("ChkAll[" + i + "].chkList[" + j + "].checkListval", (Model.ChkAll[i].chkList[j].Complete == true) ? true : false, new { value = true })
                        </td>
                    </tr>
                }
            </table>

        }
        <table style="width: 100%">
            <tr>
                <td>
                    <span class="lblSpan">Comments</span>
                    <br />
                    @Html.TextAreaFor(m => Model.commonACCREV.Comments, new { maxlength = "500", style = "width:100%;height:100px", value = Model.commonACCREV.Comments })
                </td>
            </tr>
            <tr>
                <td colspan="4"></td>
            </tr>
            <tr>
                <td colspan="4"></td>
            </tr>
            <tr>
                <td colspan="4">
                    <h4>Documents</h4>
                </td>
            </tr>
        </table>
        @if (Model.DocList != null)
        {
            <table style="width: 100%" class="gridStyle">
                <tr class="HeaderStyle">
                    <td colspan="2">Document Name</td>
                    <td align="center">Download</td>
                    <td align="center">Verified</td>
                </tr>


                @for (int i = 0; i < Model.DocList.Count; i++)
                {
                    <tr>
                        <td colspan="2">@Model.DocList[i].IEPName</td>
                        <td align="center">
                            @Html.HiddenFor(m => Model.DocList[i].IEPId, Model.DocList[i].IEPId)
                            <img id="@Model.DocList[i].IEPId" src="../Images/download.PNG" onclick="downloadFn(this.id);" />
                        </td>
                        <td align="center">
                            @* <input type="checkbox" id="chkVerify" />*@
                            @Html.CheckBox("DocList[" + i + "].Verified", (Model.DocList[i].Verified == true) ? true : false, new { value = true })
                        </td>
                    </tr>
                }
            </table>
        }
        <table style="width: 100%">
            <tr>
                <td>
                    <span class="lblSpan">Document Name</span>
                    <br />
                    @Html.TextBoxFor(name => Model.DocumentName, new { maxlength = "50", id = "txtDocName" })
                </td>

                <td>
                    <span class="lblSpan">Upload Documents</span>
                    <br />
                    <input type="file" name="Upfile" id="file" />
                </td>
                <td>
                    @* <img src="~/Images/Addfile.png" />*@
                    <input type="submit" value="Add" name="ActionFunding" style="width: 80px;" id="DocAdd" />
                </td>
            </tr>
            <tr>
                <td colspan="4"></td>
            </tr>
            <tr>
                <td colspan="4"></td>
            </tr>
            <tr>
                <td colspan="4"></td>
            </tr>
        </table>
        <table style="width: 100%">
            <tr>
                <td colspan="4">
                    <h4>Contact Log</h4>
                </td>
            </tr>
            <tr>
                <td colspan="4">

                    <table style="width: 100%" id="tblCallLog">
                        @for (int i = 0; i < Model.commonCallLog.Count; i++)
                        {
                            int countshow = i + 1;

                            <tr>
                                <td colspan="4">
                                    <div>
                                        <table style="width: 100%">
                                            <tr>
                                                <td style="text-align: left;">
                                                    <h3>Contact Log @countshow</h3>
                                                </td>
                                                <td style="text-align: right;">
                                                    @if (Model.commonCallLog[i].CallLogId != 0 && Model.commonCallLog[i].IsSubmit == false)
                                                    {
                                                        <img style="cursor:pointer" onclick="RemoveSingleCallLog(@Model.commonCallLog[i].CallLogId);" src="~/Images/removeCalllog.png" alt="Remove Contact Log @countshow" />
                                                    }
                                                </td>
                                            </tr>
                                        </table>

                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 275px;">
                                    <span class="lblSpan">Staff Name</span>
                                    <br />
                                    @Html.TextBoxFor(m => Model.commonCallLog[i].StaffName, Model.commonCallLog[i].StaffName, new { maxlength = "50", style = "width:200px;margin-bottom:2%;", @Class = "staffName namefield", onpaste = "PreventDef(event)" })
                                </td>
                                <td>
                                    <span class="lblSpan">Date and Time of Call</span>
                                    <br />
                                    @Html.TextBoxFor(m => Model.commonCallLog[i].CallDateShow, Model.commonCallLog[i].CallDateShow, new { style = "width:150px", @class = "datepicker", onkeypress = "return false", onpaste = "PreventDef(event);" })
                                    @if (Model.commonCallLog[i].CallTimeShow == "00:00")
                                    {
                                        Model.commonCallLog[i].CallTimeShow = null;
                                    }

                                    @Html.TextBoxFor(m => Model.commonCallLog[i].CallTimeShow, Model.commonCallLog[i].CallTimeShow, new { style = "width:60px !important;margin:0", onkeypress = "return false" })
                                </td>
                                @Html.HiddenFor(m => Model.commonCallLog[i].IsPresent, Model.commonCallLog[i].IsPresent)
                                @Html.HiddenFor(m => Model.commonCallLog[i].academicReviewId, Model.commonCallLog[i].academicReviewId)
                                @Html.HiddenFor(m => Model.commonCallLog[i].CallLogId, Model.commonCallLog[i].CallLogId)
                            </tr>
                            <tr>
                                <td>
                                    <span class="lblSpan">Name Of Contact</span>
                                    <br />
                                    @Html.TextBoxFor(m => Model.commonCallLog[i].NameOfContact, Model.commonCallLog[i].NameOfContact, new { maxlength = "50", style = "width:200px;margin-bottom:2%;", @class = "namefield nameofcontact", onpaste = "PreventDef(event)" })
                                </td>
                                <td>
                                    <span class="lblSpan">Appointment Date/Time</span>
                                    <br />
                                    @Html.TextBoxFor(m => Model.commonCallLog[i].AppntDateShow, Model.commonCallLog[i].AppntDateShow, new { style = "width:150px", @class = "datepicker", onkeypress = "return false", onpaste = "PreventDef(event);" })
                                    @if (Model.commonCallLog[i].AppntTimeShow == "00:00")
                                    {
                                        Model.commonCallLog[i].AppntTimeShow = null;
                                    }

                                    @Html.TextBoxFor(m => Model.commonCallLog[i].AppntTimeShow, Model.commonCallLog[i].AppntTimeShow, new { style = "width:60px !important;margin:0", onkeypress = "return false" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="4">
                                    <span class="lblSpan">Conversation Details</span>
                                    <br />
                                    @Html.TextAreaFor(m => Model.commonCallLog[i].Conversation, new { maxlength = "500", style = "width:100%;height:100px", value = Model.commonCallLog[i].Conversation })
                                </td>
                            </tr>
                        }

                        <input id="CountVal" type="hidden" value="@Model.commonCallLog.Count" />
                    </table>
                </td>
            </tr>
            <tr>
                <td colspan="4"></td>
            </tr>
            <tr>

                <td colspan="4">
                    <input type="button" name="AddCallLogList" value="Add Contact Log" id="AddCallLog" onclick="appndRw_fundingv()" style="width: 110px;" />
                    <input type="button" name="RemoveCallLogList" value="Remove Contact Log" id="RemoveCallLog" onclick="RemoveRow()" style="display: none; width: 132px" />
                </td>
            </tr>
            <tr>
                <td colspan="4"></td>
            </tr>
            <tr>
                <td colspan="4"></td>
            </tr>
            <tr>
                <td colspan="4"></td>
            </tr>
            <tr>
                <td colspan="4">
                    <hr />
                </td>
            </tr>
            <tr>
                <td style="width: 85px;">Approved<span style="color: red">*</span></td>
                @{
                        string yescheck = "";
                        string nocheck = "";
                        if (Model.approvedStatus == 2)
                        {
                            nocheck = "checked";
                        }
                        else
                        {
                            yescheck = "checked";
                        }

                }
                <td>
                    <input type="radio" @MvcHtmlString.Create(yescheck) name="approvedStatus" value="1" />Yes<input type="radio" @MvcHtmlString.Create(nocheck) name="approvedStatus" value="2" />No
                </td>
                <td></td>
                <td>
                    @if (ViewBag.permission == "true")
                    {
                        <input type="button" value="Submit" onclick="return ValidateDate(event, this.id)" name="ActionFunding" id="submitFunding" />
                    }
                    <input type="submit" value="Save" onclick="return ValidateDate(event, this.id)" name="ActionFunding" id="saveFunding" />
                </td>
                <td>
                    @Html.HiddenFor(m => Model.commonACCREV.academicReviewId, Model.commonACCREV.academicReviewId)
                    @Html.HiddenFor(m => Model.commonACCREV.IsPresent, Model.commonACCREV.IsPresent)

                    @Html.HiddenFor(m => Model.approvedStatus, Model.approvedStatus)
                    @Html.HiddenFor(m => Model.commonACCREV.iSSubmitted, Model.commonACCREV.iSSubmitted)
                </td>
            </tr>
        </table>
    </div>




    <div id="viewUserList" class="popUpStyle" style="width: 50%; left: 25%;">

        <a id="close_x" class="close sprited1" style="" href="#" onclick="closepopup(event)">
            <img width="18" height="18" alt="" style="" src="../Images/button_red_close.png">
        </a>
        <hr />
        <div id="viewUserListContent" style="margin: 0px auto; width: 80%;">
        </div>
    </div>

    <div id="viewLetterTray" class="popUpStyle">
        <img id="ButtonCancelLetter" class="" onclick="closeLetterpopup(event)" />
        <div id="viewLetterTrayContent">
        </div>
    </div>
    <div id="dialog" title="Confirmation Required">
    </div>


    <input type="hidden" id="ExtraCallLog" value="" />
}


<script type="text/javascript">

    $(document).ready(function () {
        staffNameAutocomplete();
        AutoCompleteNameOfContact();
        GetNameFieldValidate();
    });

    function GetNameFieldValidate() {
        $('.namefield').keypress(function (event) {
            var inputValue = event.which;
            if (((inputValue >= 65 && inputValue <= 90) || (inputValue >= 97 && inputValue <= 122) || (inputValue == 32) || (inputValue == 39) || (inputValue == 45) || (inputValue == 8) || (inputValue == 0))) {
            }
            else {
                event.preventDefault();
            }
        });
    }


    function staffNameAutocomplete() {
        $(".staffName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "../Dashboard/AutoCompleteStaffName",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        //response(data.ReferralName);
                        response($.map(data, function (item) {
                            return { label: item.UserName, value: item.UserName };
                        }))
                    },
                })
            },
            messages: {
                noResults: '',
                results: function (resultsCount) { }
            }
        });
    }
</script>
